@model IEnumerable < Bike_Store_Api.ViewModels.ProductVM>

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>product</h4>
        <hr />
        @foreach (var item in Model)
        {


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(modelItem => item.product_id)

        <div class="form-group">
            @Html.Label("product_name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(modelItem =>item.product_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.product_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("brand", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("brand_id", new SelectList(ViewBag.brand, "brand_id", "brand_name"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(modelItem => item.brand_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("category_id", new SelectList(ViewBag.category, "category_id", "category_name"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(modelItem => item.category_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("model_year", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(modelItem => item.model_year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.model_year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("list_price", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(modelItem => item.list_price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.list_price, "", new { @class = "text-danger" })
            </div>
        </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
